/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apresentacao;

import Template.OrdenarNomeCliente;
import entidade.Cliente;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import negocio.NCliente;

/**
 *
 * @author rafael
 */
public class ListaCliente extends javax.swing.JInternalFrame {

    JDesktopPane painelPrincipal;

    /**
     * Creates new form ListaCliente
     */
    public ListaCliente() {
        initComponents();
        carregarTabela();
    }

    public ListaCliente(JDesktopPane parametro) {
        this();
        painelPrincipal = parametro;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        btnSair = new javax.swing.JButton();
        comboBoxOrdenacao = new javax.swing.JComboBox<>();

        setTitle("Lista de Clientes");

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblClientesMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblClientes);

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        comboBoxOrdenacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "< Selecionar Ordenação >", "Nome" }));
        comboBoxOrdenacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxOrdenacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboBoxOrdenacao, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSair)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSair)
                    .addComponent(comboBoxOrdenacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblClientesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientesMousePressed
        // TODO add your handling code here:

        try {

            int indice = tblClientes.getSelectedRow();
            String id = tblClientes.getValueAt(indice, 0).toString();

            Cliente cliente = new NCliente().consultar(Integer.parseInt(id));

            CadCliente janela = new CadCliente(painelPrincipal, cliente);
            painelPrincipal.add(janela);
            janela.setVisible(true);
            this.dispose();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

    }//GEN-LAST:event_tblClientesMousePressed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void comboBoxOrdenacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxOrdenacaoActionPerformed
        // TODO add your handling code here:

        switch (comboBoxOrdenacao.getSelectedIndex()) {
            case 1:
                try {
                    OrdenarNomeCliente objeto = new OrdenarNomeCliente();
                    imprimirNaGrid(objeto.listagemClientes());
                } catch (Exception ex) {
                    Logger.getLogger(ListaCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            default:
                JOptionPane.showMessageDialog(this, "Opção Inválida");

        }

    }//GEN-LAST:event_comboBoxOrdenacaoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox<String> comboBoxOrdenacao;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblClientes;
    // End of variables declaration//GEN-END:variables

    private void carregarTabela() {
        try {

            Vector<String> cabecalho = new Vector();
            cabecalho.add("Id");
            cabecalho.add("Nome");
            cabecalho.add("CPF");
            cabecalho.add("Telefone");
            cabecalho.add("Endereço");
            cabecalho.add("E-mail");
            cabecalho.add("Data de Nascimento");

            Vector detalhe = new Vector();

            for (Cliente cliente : new NCliente().listar()) {
                Vector<String> linha = new Vector();

                linha.add(cliente.getId() + "");
                linha.add(cliente.getNome());
                linha.add(cliente.getCpf());
                linha.add(cliente.getTelefone());
                linha.add(cliente.getEndereco());
                linha.add(cliente.getEmail());
                linha.add(cliente.getData_nascimento().toString());
                detalhe.add(linha);

            }

            tblClientes.setModel(new DefaultTableModel(detalhe, cabecalho));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

    }

    private void imprimirNaGrid(Iterator<Cliente> dados) {
        try {
            DefaultTableModel model = (DefaultTableModel) tblClientes.getModel();
            model.setNumRows(0);
            while (dados.hasNext()) {
                String[] linha = new String[7];
                Cliente obj = dados.next();
                linha[0] = obj.getId() + "";
                linha[1] = obj.getNome();
                linha[2] = obj.getCpf();
                linha[3] = obj.getTelefone();
                linha[4] = obj.getEndereco();
                linha[5] = obj.getEmail();
                linha[6] = obj.getData_nascimento().toString();
                model.addRow(linha);
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(rootPane, erro);
        }
    }

}
