/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apresentacao;

import entidade.Atendimento;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.Vector;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import negocio.NAtendimento;
import negocio.NCliente;
import negocio.NDependente;
import negocio.NFuncionario;
import negocio.NMidia;
import negocio.NMulta;
import negocio.NTitulo;

/**
 *
 * @author rafael
 */
public class ListaDevolucao extends javax.swing.JInternalFrame {
    
    JDesktopPane painelPrincipal;
    
    /**
     * Creates new form ListaDevolucao
     */
    public ListaDevolucao() {
        initComponents();
        carregarTabela();
    }
    
    public ListaDevolucao(JDesktopPane parametro) {
        this();
        painelPrincipal = parametro;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDevolucao = new javax.swing.JTable();

        setTitle("Lista Atendimentos");

        tblDevolucao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblDevolucao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblDevolucaoMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblDevolucao);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1070, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblDevolucaoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDevolucaoMousePressed
        // TODO add your handling code here:
        
        try {

            int indice = tblDevolucao.getSelectedRow();
            String id = tblDevolucao.getValueAt(indice, 0).toString();

            Atendimento atendimento = new NAtendimento().consultar(Integer.parseInt(id));
            Date dataSaida = new Date();
            atendimento.setDataSaida(dataSaida);
            
            CadDevolucao janela = new CadDevolucao(painelPrincipal, atendimento);
            painelPrincipal.add(janela);
            janela.setVisible(true);
            this.dispose();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR" + e.getMessage());
        }
        
    }//GEN-LAST:event_tblDevolucaoMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDevolucao;
    // End of variables declaration//GEN-END:variables

    private void carregarTabela() {
        try {

            Vector<String> cabecalho = new Vector();
            cabecalho.add("Id");
            cabecalho.add("Qtde Mídias");
            cabecalho.add("Mídia");
            cabecalho.add("Filme");
            cabecalho.add("Desconto");
            cabecalho.add("Valor Total");
            cabecalho.add("Data Entrada");
            cabecalho.add("Data Saída");
            cabecalho.add("Tempo");
            cabecalho.add("Funcionário");
            cabecalho.add("Multa");
            cabecalho.add("Cliente");
            cabecalho.add("Dependente");
            cabecalho.add("Status");
            

            Vector detalhe = new Vector();

            for (Atendimento atendimento : new NAtendimento().listar()) {
                Vector<String> linha = new Vector();

                linha.add(atendimento.getId() + "");
                linha.add(atendimento.getQuantidadeMidias() + "");
                if(atendimento.getMidia_id() == 0){
                    linha.add(" - ");
                }else{
                    linha.add(new NMidia().consultar(atendimento.getMidia_id()).getTipoMidia());
                }
                linha.add(new NTitulo().consultar(atendimento.getTitulo_id()).getNome());
                if(atendimento.getDesconto() == null){
                    linha.add(" - ");
                }else{
                    linha.add(atendimento.getDesconto() + "");
                }
                linha.add("R$" + atendimento.getValorTotal() + "0");
                linha.add(atendimento.getDataEntrada().toString());
                if(atendimento.getDataSaida() != null){
                    linha.add(atendimento.getDataSaida().toString());
                }else {
                    linha.add(" - ");
                }
                linha.add(atendimento.getDuracao() + "");
                linha.add(new NFuncionario().consultar(atendimento.getFuncionario_id()).getNome());
                if(atendimento.getMulta_id() == null){
                    linha.add(" - ");
                } else {
                    linha.add(new NMulta().consultar(atendimento.getMulta_id()).getDescricao());
                }
                linha.add(new NCliente().consultar(atendimento.getCliente_id()).getNome());
                if(atendimento.getDependente_id() == null){
                    linha.add(" - ");
                } else{
                    linha.add(new NDependente().consultar(atendimento.getDependente_id()).getNome());
                }
                linha.add(atendimento.isStatus()+ "");
                detalhe.add(linha);

            }

            tblDevolucao.setModel(new DefaultTableModel(detalhe, cabecalho));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro listar" + e.getMessage());
        }

    }

}


